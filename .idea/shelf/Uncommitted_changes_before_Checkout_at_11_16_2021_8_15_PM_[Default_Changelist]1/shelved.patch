Index: TeamCode/src/main/java/org/firstinspires/ftc/teamcode/TeleOp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.firstinspires.ftc.teamcode;\r\n\r\nimport com.qualcomm.robotcore.eventloop.opmode.OpMode;\r\n\r\nimport org.firstinspires.ftc.robotcore.external.navigation.DistanceUnit;\r\nimport org.firstinspires.ftc.teamcode.Robot.Robot;\r\n\r\n\r\n/**\r\n * Created by shell on 11/04/2021.\r\n */\r\n\r\n@com.qualcomm.robotcore.eventloop.opmode.TeleOp(group = \"Manual\", name = \"Manual Mode\")\r\npublic class TeleOp extends OpMode {\r\n\r\n\tprivate Robot robot = new Robot();\r\n\tprivate Logger logger = null;\r\n\r\n\tprivate double speed = 0.5;\r\n\tprivate double armSpeed = 1.0;\r\n\r\n\tprivate boolean last_x = false;\r\n\tprivate boolean last_a = false;\r\n\tprivate boolean last_y = false;\r\n\tprivate boolean last_b = false;\r\n\r\n\t/**\r\n\t * Run once after INIT is pushed\r\n\t */\r\n\t@Override\r\n\tpublic void init() {\r\n\t\trobot.init(hardwareMap, telemetry, this);\r\n\t\tlogger = new Logger(telemetry);\r\n\t\tthis.msStuckDetectStop = 60000;\r\n\r\n\t\t// Step 0 - Initialized\r\n\t\tlogger.statusLog(0, \"Initialized\");\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Runs constantly after INIT is pushed but before PLAY is pushed\r\n\t */\r\n\t@Override\r\n\tpublic void init_loop() {\r\n\r\n\t}\r\n\r\n\tint X = 0;\r\n\tint Y = 0;\r\n\r\n\t/**\r\n\t * Runs once after PLAY is pushed\r\n\t */\r\n\t@Override\r\n\tpublic void start() {\r\n\t\tlogger.statusLog(0, \"Playing\");\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void loop() {\r\n\t\t/* Controller Layouts\r\n\t\t *\r\n\t\t * Controller 1 - \"Body Controller\"\r\n\t\t *      Left Trigger     - Set full speed\r\n\t\t *      Right Trigger    - Set half speed\r\n\t\t *\r\n\t\t *      Right Joystick X - Turn the robot\r\n\t\t *\r\n\t\t * \t\tY Button \t\t - Turn on the duck spinner\r\n\t\t * \t\tX Button\t\t - Turn on the duck spinner\r\n\t\t *\r\n\t\t * Controller 2 - \"Arm Controller\"\r\n\t\t *      Right Trigger    - Extends arm\r\n\t\t *      Left Trigger     - Detracts arm\r\n\t\t *\r\n\t\t * \t\tRight Bumper\t - Full arm speed\r\n\t\t * \t\tLeft Bumper \t - Hald arm speed\r\n\t\t *\r\n\t\t *      Dpad Up          - Raise the arm\r\n\t\t *      Dpad Down        - Lower the arm\r\n\t\t *\r\n\t\t *      Y Button         - Grab blocks with the hand\r\n\t\t *      A Button         - Release blocks with the hand\r\n\t\t *\r\n\t\t */\r\n\r\n\t\t/*\r\n\t\t * Controller 1 settings\r\n\t\t */\r\n\r\n\t\tsingleJoystickDrive();\r\n\r\n\t\tif (this.gamepad1.right_trigger > 0.5) {\r\n\t\t\tspeed = 1.0;\r\n\t\t} else if (this.gamepad1.left_trigger > 0.5) {\r\n\t\t\tspeed = 0.5;\r\n\t\t} else if (this.gamepad1.right_bumper) {\r\n\t\t\tspeed = 0.25;\r\n\t\t}\r\n\r\n\t\tif(this.gamepad1.y) {\r\n\t\t\trobot.arm.turnOnSpinner(1);\r\n\t\t} else if (this.gamepad1.a) {\r\n\t\t\trobot.arm.turnOnSpinner(-1);\r\n\t\t} else {\r\n\t\t\trobot.arm.turnOffSpinner();\r\n\t\t}\r\n\r\n\t\tlast_x = this.gamepad1.x;\r\n\t\tlast_a = this.gamepad1.a;\r\n\t\tlast_y = this.gamepad1.y;\r\n\t\tlast_b = this.gamepad1.b;\r\n\r\n\t\t/*\r\n\t\t * Controller 2 settings\r\n\t\t */\r\n\r\n\t\tif (this.gamepad2.right_trigger > 0.5) {\r\n\t\t\trobot.arm.extendWithPower(0.55);\r\n\t\t} else if (this.gamepad2.left_trigger > 0.5) {\r\n\t\t\trobot.arm.extendWithPower(-0.55);\r\n\t\t} else {\r\n\t\t\trobot.arm.extendWithPower(0);\r\n\t\t}\r\n\r\n\t\tif (this.gamepad2.right_bumper) {\r\n\t\t\tarmSpeed = 1.0;\r\n\t\t} else if (this.gamepad2.left_bumper) {\r\n\t\t\tarmSpeed = 0.5;\r\n\t\t}\r\n\r\n\t\tif (this.gamepad2.dpad_up) {\r\n\t\t\trobot.arm.raiseWithPower(1 * armSpeed);\r\n\t\t} else if (this.gamepad2.dpad_down) {\r\n\t\t\trobot.arm.lowerWithPower(0.20);\r\n\t\t} else {\r\n\t\t\trobot.arm.raiseWithPower(0);\r\n\t\t}\r\n\r\n\t\tif(this.gamepad2.y) {\r\n\t\t\trobot.arm.grabHand();\r\n\t\t} else if (this.gamepad2.a) {\r\n\t\t\trobot.arm.releaseHand();\r\n\t\t}\r\n\r\n\t\tlogger.numberLog(\"Drive Speed\", speed);\r\n\t\tlogger.numberLog(\"Arm Speed\", armSpeed);\r\n\t\tlogger.update();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Runs once after STOP is pushed\r\n\t */\r\n\t@Override\r\n\tpublic void stop() {\r\n\t\trobot.stopAllMotors();\r\n\t\tlogger.completeLog(\"Status\", \"Stopped\");\r\n\t\tlogger.update();\r\n\t}\r\n\r\n\tprivate void singleJoystickDrive() {\r\n\t\tfloat leftX = this.gamepad1.left_stick_x;\r\n\t\tfloat leftY = this.gamepad1.left_stick_y;\r\n\t\tfloat rightX = this.gamepad1.right_stick_x;\r\n\r\n\t\tfloat[] motorPowers = new float[4];\r\n\t\tmotorPowers[0] = (leftY-leftX-rightX);// -+\r\n\t\tmotorPowers[1] = (leftY+leftX+rightX);// +-\r\n\t\tmotorPowers[2] = (leftY+leftX-rightX);// ++\r\n\t\tmotorPowers[3] = (leftY-leftX+rightX);// --\r\n\r\n\t\tfloat max = getLargestAbsVal(motorPowers);\r\n\t\tif(max < 1) { max = 1; }\r\n\r\n\t\tfor(int i = 0; i < motorPowers.length; i++) {\r\n\t\t\tmotorPowers[i] *= (speed / max);\r\n\r\n\t\t\tfloat abs = Math.abs(motorPowers[i]);\r\n\t\t\tif(abs < 0.05) { motorPowers[i] = 0.0f; }\r\n\t\t\tif(abs > 1.0) { motorPowers[i] /= abs; }\r\n\t\t\tlogger.numberLog(\"Motor\" + i, motorPowers[i]);\r\n\t\t}\r\n\r\n\t\trobot.drivetrain.setIndividualPowers(motorPowers);\r\n\t}\r\n\r\n\tprivate float getLargestAbsVal(float[] values) {\r\n\t\tfloat max = 0;\r\n\t\tfor(float val : values) {\r\n\t\t\tif(Math.abs(val) > max) { max = Math.abs(val); }\r\n\t\t}\r\n\t\treturn max;\r\n\t}\r\n\r\n}
===================================================================
--- TeamCode/src/main/java/org/firstinspires/ftc/teamcode/TeleOp.java	(revision 85a1070656b0ebfbf80f7b4dbe2ad618a8bc1b1f)
+++ TeamCode/src/main/java/org/firstinspires/ftc/teamcode/TeleOp.java	(date 1636683359649)
@@ -75,7 +75,7 @@
 		 *      Left Trigger     - Detracts arm
 		 *
 		 * 		Right Bumper	 - Full arm speed
-		 * 		Left Bumper 	 - Hald arm speed
+		 * 		Left Bumper 	 - Have arm speed
 		 *
 		 *      Dpad Up          - Raise the arm
 		 *      Dpad Down        - Lower the arm
